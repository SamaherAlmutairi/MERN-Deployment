{"version":3,"sources":["views/Home.js","views/One.js","components/Form.js","views/New.js","views/Edit.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","ev","setev","setLoaded","useEffect","axios","get","then","res","data","sort","a","b","type","localeCompare","catch","err","console","log","to","map","index","name","_id","One","id","formInputs","setFormInputs","description","skill1","skill2","skill3","onClick","e","delete","navigate","Form","changeFunction","submitFunction","buttonText","formInputsError","onSubmit","value","onChange","title","style","color","New","errors","setErrors","setFormInputsError","target","length","preventDefault","post","errorResponse","response","errorArr","Object","keys","key","push","message","Edit","errm","put","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc66f001.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport Button from \"../components/Button\";\r\nimport style from \"../components/style.css\"\r\n\r\nconst Home = ({ props }) => {\r\n  const [ev, setev] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pet\")\r\n      .then((res) => {\r\n        setev(res.data.sort((a, b) => a.type.localeCompare(b.type)));\r\n        setLoaded(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <hr></hr>\r\n      <Link to=\"/new\">Add A Pet to the shelter</Link> \r\n            <h5>These pets are looking for a good home</h5>\r\n\r\n            <table >\r\n                <thead >\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ev.map((ev, index) => {\r\n                        return <tr key={index}>\r\n                            <td>{ev.name}</td>\r\n                            <td>{ev.type}</td>\r\n                            <td>\r\n                            <Link to={`/one/${ev._id}`}>\r\n          <button>Datitals </button>\r\n        </Link> | <Link to={\"/edit/\" + ev._id}>\r\n          <button >Edit</button>\r\n        </Link>   \r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n      {/* <hr></hr>\r\n      {loaded &&<List data={ev} loaded={loaded} setLoaded={setLoaded} /> }\r\n      <hr></hr> */}\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import { Link, navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from '../components/Button'\r\n\r\n\r\nconst One = ({ id ,props }) => {\r\n  const [formInputs, setFormInputs] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pet/\" + id)\r\n      .then((res) => {\r\n        setFormInputs(res.data);\r\n      })\r\n  }, []);\r\n  const DeleteFuncation = (e) => {\r\n  \r\n      axios\r\n        .delete(\"http://localhost:8000/api/pet/\" + id)\r\n        .then((res) => {\r\n          // props.setLoaded(true);\r\n          navigate(\"/\");\r\n        })\r\n        .catch((err) => console.log(err)); \r\n   \r\n  };\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Back to Home </Link>\r\n        <h5>Datails About :</h5> {formInputs.name}\r\n          <hr></hr>\r\n          <h5>Pet type:</h5> <p> {formInputs.type}</p>\r\n          <h5>Description:</h5><p>{formInputs.description}</p>\r\n          <h5>Skills: </h5><p>{formInputs.skill1}</p>\r\n          <p>{formInputs.skill2}</p>\r\n          <p>{formInputs.skill3}</p>\r\n        <button onClick={DeleteFuncation}>Adopt Gar Field</button>\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default One;\r\n","const Form = ({\r\n    formInputs,\r\n    changeFunction,\r\n    submitFunction,\r\n    buttonText,\r\n    formInputsError,\r\n  }) => {\r\n    return (\r\n        <form onSubmit={submitFunction}>\r\n            <div >\r\n                <p>\r\n                    Name: {\" \"}\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={formInputs.name}\r\n                        onChange={changeFunction}\r\n                    />\r\n                </p>\r\n                {formInputsError.title ? <p style={{ color: \"red\" }}>{formInputsError.title}</p> : \"\"}\r\n                <p>\r\n                Type: {\" \"}\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        value={formInputs.type}\r\n                        onChange={changeFunction}\r\n                    />\r\n                </p>\r\n                <p>\r\n                Description: {\" \"}\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        value={formInputs.description}\r\n                        onChange={changeFunction}\r\n                    />\r\n                </p>\r\n                <p>Skills (Optional)</p>\r\n                <p>\r\n                Skill 1: {\" \"}\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"skill1\"\r\n                        value={formInputs.skill1}\r\n                        onChange={changeFunction}\r\n                    />\r\n                </p>\r\n                <p>\r\n                Skill 2: {\" \"}\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"skill2\"\r\n                        value={formInputs.skill2}\r\n                        onChange={changeFunction}\r\n                    />\r\n                </p>\r\n                <p>\r\n                Skill 3: {\" \"}\r\n                <input\r\n                        type=\"text\"\r\n                        name=\"skill3\"\r\n                        value={formInputs.skill3}\r\n                        onChange={changeFunction}\r\n                    />\r\n                </p>\r\n    \r\n                <button type=\"submit\" >{buttonText}</button>\r\n                {/* <Link to=\"/\"><button >cancel</button></Link> */}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import { Link, navigate } from \"@reach/router\"\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport Form from \"../components/Form\"\r\n\r\nconst New = (props) => {\r\n    const [errors, setErrors] = useState([])\r\n    const [formInputs, setFormInputs] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\",\r\n\r\n    })\r\n    const [formInputsError, setFormInputsError] = useState({\r\n        title: '',\r\n    })\r\n\r\n\r\n    const submitFunction = (e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .post(\"http://localhost:8000/api/pet/\", formInputs)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                navigate(\"/\")\r\n            })\r\n            .catch((err) => {\r\n                const errorResponse = err.response.data.errors // Get the errors from err.response.data\r\n                const errorArr = [] // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n\r\n    const changeFunction = (e) => {\r\n\r\n        if (e.target.name === 'name') {\r\n            if (e.target.value.length < 1) {\r\n                setFormInputsError({\r\n                    ...formInputsError,\r\n                    title: \" name is required in frontend Valdition\"\r\n                })\r\n            } else if (e.target.value.length < 3) {\r\n                setFormInputsError({\r\n                    ...formInputsError,\r\n                    title: \"  name must be at least 3 characters frontend Valdition\"\r\n                })\r\n            }\r\n\r\n            else {\r\n                setFormInputsError({\r\n                    ...formInputsError,\r\n                    title: \"\",\r\n                })\r\n            }\r\n        }\r\n    setFormInputs({\r\n\r\n            ...formInputs,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">Back to Home</Link>\r\n            <h3>Add Pet</h3>\r\n            <h5>Know a pets needing a home?</h5>\r\n            {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <Form\r\n                formInputs={formInputs}\r\n        changeFunction={changeFunction}\r\n        submitFunction={submitFunction}\r\n        formInputsError={formInputsError}\r\n        buttonText={\"Create\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default New","import { Link, navigate } from \"@reach/router\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport Form from \"../components/Form\"\r\n\r\nconst Edit = ({ id }) => {\r\n    const [errors, setErrors] = useState([])\r\n    const [formInputs, setFormInputs] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\",\r\n    })\r\n    \r\n    const [formInputsError, setFormInputsError] = useState({\r\n        errm: '',\r\n    })\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pet/${id}`).then((res) => {\r\n          console.log(\"got results\", res);\r\n          setFormInputs(res.data);\r\n        });\r\n      }, [id]);\r\n    const submitFunction = (e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .put(\"http://localhost:8000/api/pet/\" + id, formInputs)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                navigate(\"/\")\r\n            })\r\n            .catch((err) => {\r\n                const errorResponse = err.response.data.errors // Get the errors from err.response.data\r\n                const errorArr = [] // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) {\r\n                    // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n\r\n    const changeFunction = (e) => {\r\n\r\n        if (e.target.name === 'name') {\r\n            if (e.target.value.length < 1) {\r\n                setFormInputsError({\r\n                    ...formInputsError,\r\n                    errm: \" name is require\"\r\n                })\r\n            } else if (e.target.value.length < 3) {\r\n                setFormInputsError({\r\n                    ...formInputsError,\r\n                    errm: \" name must be at least 3 characters\"\r\n                })\r\n            }\r\n\r\n            else {\r\n                setFormInputsError({\r\n                    ...formInputsError,\r\n                    errm: \"\",\r\n                })\r\n            }\r\n        }\r\n     setFormInputs({\r\n\r\n            ...formInputs,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">Back to Home</Link>\r\n            <h3>Edit Gar Field</h3>\r\n            {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <Form\r\n                formInputs={formInputs}\r\n        changeFunction={changeFunction}\r\n        submitFunction={submitFunction}\r\n        formInputsError={formInputsError}\r\n        buttonText={\"Edit\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Edit","import './App.css';\nimport { Router } from '@reach/router';\nimport Home from \"./views/Home\";\nimport One from './views/One';\nimport New from './views/New';\nimport Edit from './views/Edit';\nfunction App() {\n\n  return (\n    <div >\n      <h1> Pet shelter</h1>\n      <Router>\n        <Home path=\"/\"  />\n        <New path=\"/new\"/>\n        <Edit path=\"/edit/:id\"/>\n        <One path=\"/one/:id\"/>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}